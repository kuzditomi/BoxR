@model BoxR.Web.Models.RegisterModel
<h2>register</h2>
<div class="form-horizontal well">
    <div class="row">
        <p class="help-inline">If you have no account so far, you can register by providing a username and your password.</p>
        <div class="span6">
            @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <div class="control-group error">
                    @if (ViewData.ModelState.ContainsKey("RegisterUserName") && ViewData.ModelState["RegisterUserName"].Errors.Any())
                    {
                        <span class="errorMsg">@ViewData.ModelState["RegisterUserName"].Errors[0].ErrorMessage</span>
                    }
                    @if (ViewData.ModelState.ContainsKey("RegisterPassword") && ViewData.ModelState["RegisterPassword"].Errors.Any())
                    {
                        <span class="errorMsg">@ViewData.ModelState["RegisterPassword"].Errors[0].ErrorMessage</span>
                    }
                    @if (ViewData.ModelState.ContainsKey("RegisterConfirmPassword") && ViewData.ModelState["RegisterConfirmPassword"].Errors.Any())
                    {
                        <span class="errorMsg">@ViewData.ModelState["RegisterConfirmPassword"].Errors[0].ErrorMessage</span>
                    }
                </div>
                <div class="control-group @(ViewData.ModelState.ContainsKey("RegisterUserName") && ViewData.ModelState["RegisterUserName"].Errors.Any() ? "error" : "")">
                    @Html.LabelFor(m => m.RegisterUserName,new{@class="control-label",@for="username"})
                    <div class="controls">
                        @Html.TextBoxFor(m => m.RegisterUserName,new{@class="input-large",id="username"})
                    </div>
                </div>
                <div class="control-group @(ViewData.ModelState.ContainsKey("RegisterPassword") && ViewData.ModelState["RegisterPassword"].Errors.Any() ? "error" : "")">
                    @Html.LabelFor(m => m.RegisterPassword,new{@class="control-label",@for="password"})
                    <div class="controls">
                        @Html.PasswordFor(m => m.RegisterPassword,new{@class="input-large password",id="password"})
                    </div>
                </div>
                <div class="control-group @(ViewData.ModelState.ContainsKey("RegisterConfirmPassword") && ViewData.ModelState["RegisterConfirmPassword"].Errors.Any() ? "error" : "")">
                    @Html.LabelFor(m => m.RegisterConfirmPassword,new{@class="control-label",@for="confirmpassword"})
                    <div class="controls">
                        @Html.PasswordFor(m => m.RegisterConfirmPassword,new{@class="input-large",id="confirmpassword"})
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <input type="submit" value="Register" class="btn"/>
                    </div>
                </div>
            }
        </div>
    </div>
</div>